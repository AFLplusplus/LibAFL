name: build and test

on:
  push:
    branches: [ main, "pr/**" ]
  pull_request:
    branches: [ main ]
    types: ["labeled", "opened", "synchronize", "reopened"]
  workflow_dispatch:
  merge_group:
env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  MAIN_LLVM_VERSION: 18

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fuzzers-qemu-user:
    strategy:
      matrix:
        fuzzer:
          # Binary only
          - ./fuzzers/binary_only/qemu_cmin
          - ./fuzzers/binary_only/qemu_tmin
        arch:
          # unless somebody pays us for the servers.
          # - aarch64
          # - arm
          # - i386
          # - ppc
          - x86_64

    runs-on: ubuntu-24.04
    steps:
      - name: Install QEMU deps
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-utils sudo python3-msgpack python3-jinja2 curl python3-dev gcc-arm-none-eabi \
            gcc-arm-linux-gnueabi g++-arm-linux-gnueabi
      - uses: dtolnay/rust-toolchain@stable
      - name: enable mult-thread for `make`
        shell: bash
        run: export MAKEFLAGS="-j$(expr $(nproc) \+ 1)"
      - name: install just
        uses: extractions/setup-just@v2
        with:
          just-version: '1.40.0'
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - uses: Swatinem/rust-cache@v2
        with: { shared-key: "ci-test" }
      - name: Build and run example QEMU fuzzers (Linux)
        shell: bash
        run: unset RUSTC && ARCH=${{ matrix.arch }} RUN_ON_CI=1 LLVM_CONFIG=llvm-config-${{env.MAIN_LLVM_VERSION}} cargo run --manifest-path ./utils/ci_runner/Cargo.toml --  ${{ matrix.fuzzer }}
