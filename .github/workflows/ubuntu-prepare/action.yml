name: Setup Rust Environment
description: Sets up the Rust environment for the CI workflow
runs:
  using: composite
  steps:
    - name: Uninstall all currently installed rust
      shell: bash
      run: |
        sudo apt purge -y 'cargo*' 'rust*'
    - name: Install and cache deps
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y curl lsb-release wget software-properties-common gnupg shellcheck pax-utils libsqlite3-dev libpixman-1-dev libc6-dev gcc g++ build-essential libglib2.0-dev
    - uses: dtolnay/rust-toolchain@nightly
    - name: install just
      uses: extractions/setup-just@v2
      with:
        just-version: '1.40.0'
    - name: Add stable clippy
      shell: bash
      run: rustup toolchain install stable --component clippy --allow-downgrade
    - name: Add nightly clippy
      shell: bash
      run: rustup toolchain install nightly --component clippy --allow-downgrade
    - name: Install cargo-hack
      shell: bash
      run: curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin
    - name: Default to nightly
      shell: bash
      run: rustup default nightly
    - name: Install LLVM
      shell: bash
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh ${{env.MAIN_LLVM_VERSION}} all
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${{env.MAIN_LLVM_VERSION}} 200
    - name: Symlink Headers
      shell: bash
      run: sudo ln -s /usr/include/asm-generic /usr/include/asm
