[package]
name = "serde_anymap"
description = "A map that can retrieve values by type - and is SerDe serializable"
version.workspace = true
authors = [
  "Andrea Fioraldi <andreafioraldi@gmail.com>",
  "Dominik Maier <domenukk@gmail.com>",
]
documentation = "https://docs.rs/libafl"
repository = "https://github.com/AFLplusplus/LibAFL/"
readme = "./README.md"
license = "MIT OR Apache-2.0"
keywords = ["os", "shmem", "no-std"]
edition = "2024"
rust-version = "1.87"
categories = ["embedded", "os", "no-std"]

[package.metadata.docs.rs]
features = ["document-features"]
all-features = true

[features]
default = ["std", "alloc", "stable_anymap"]
document-features = ["dep:document-features"]

#! # Feature Flags
#! ### General Features

## Enables features that need rust's `std` lib to work, like print, env, ... support
std = ["alloc", "libafl_core/std"]

## Enables all features that allocate in `no_std`
alloc = ["erased-serde/alloc", "libafl_core/alloc"]

## Create keys that are more stable between compilations
stable_anymap = []
serdeany_autoreg = []

[build-dependencies]
rustversion = { workspace = true }

[dev-dependencies]

[dependencies]
# Document all features of this crate (for `cargo doc`)
document-features = { workspace = true, optional = true }

libafl_core = { workspace = true }
static_assertions = { workspace = true }
serde = { workspace = true }
erased-serde = { workspace = true, default-features = false }
hashbrown = { workspace = true }
ahash = { workspace = true }
postcard = { workspace = true }

[lints]
workspace = true
