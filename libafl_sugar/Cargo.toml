[package]
name = "libafl_sugar"
version.workspace = true
authors = ["Andrea Fioraldi <andreafioraldi@gmail.com>"]
description = "Sugar builders to create common fuzzers with LibAFL"
documentation = "https://docs.rs/libafl_sugar"
repository = "https://github.com/AFLplusplus/LibAFL/"
readme = "../README.md"
license = "MIT OR Apache-2.0"
keywords = ["fuzzing"]
edition = "2021"
build = "build.rs"
categories = ["development-tools::testing", "emulators", "embedded", "os", "no-std"]

[package.metadata.docs.rs]
all-features = true

[features]
default = []
document-features = ["dep:document-features"]
clippy = [ "libafl_qemu/clippy" ] # special feature for clippy, don't use in normal projects

#! # Feature Flags
#! ## General Features

## Build python bindings
python = ["pyo3", "libafl_qemu/python", "pyo3-build-config"]

#! ## Features for `libafl_qemu` (Linux only)
#! The following architecture features are mutually exclusive.

## build qemu for x86_64 (default)
x86_64 = ["libafl_qemu/x86_64"]
## build qemu for i386
i386 = ["libafl_qemu/i386"]
## build qemu for arm
arm = ["libafl_qemu/arm"]
## build qemu for aarch64
aarch64 = ["libafl_qemu/aarch64"]
## build qemu for mips (el, use with the 'be' feature of mips be)
mips = ["libafl_qemu/mips"]
## build qemu for powerpc
ppc = ["libafl_qemu/ppc"]
## build qemu for hexagon
hexagon = ["libafl_qemu/hexagon"]

[build-dependencies]
pyo3-build-config = { version = "0.21", optional = true }

[dependencies]
libafl = { path = "../libafl", version = "0.13.1" }
libafl_bolts = { path = "../libafl_bolts", version = "0.13.1" }
libafl_targets = { path = "../libafl_targets", version = "0.13.1" }

# Document all features of this crate (for `cargo doc`)
document-features = { version = "0.2", optional = true }

typed-builder = "0.18" # Implement the builder pattern at compiletime
pyo3 = { version = "0.18", optional = true }
log = "0.4.20"

[target.'cfg(target_os = "linux")'.dependencies]
libafl_qemu = { path = "../libafl_qemu", version = "0.13.1" }

[lib]
name = "libafl_sugar"
crate-type = ["cdylib", "rlib"]
