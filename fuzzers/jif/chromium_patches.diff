diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index aee9abd99a..dc3beb026e 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -1105,6 +1105,8 @@ if (is_win) {
       ":chrome_framework",
       ":chrome_framework_create_bundle",
       ":chrome_framework_shared_library",
+      "//headless:jif", # JIF
+      "//headless:headless_shared_sources", # JIF
     ]

     sources = [
diff --git a/testing/libfuzzer/unittest_main.cc b/testing/libfuzzer/unittest_main.cc
index 01a7af3253..27f2ec0c5a 100644
--- a/testing/libfuzzer/unittest_main.cc
+++ b/testing/libfuzzer/unittest_main.cc
@@ -32,7 +32,7 @@ std::vector<uint8_t> readFile(std::string path) {
 size_t LLVMFuzzerMutate(uint8_t *Data, size_t Size, size_t MaxSize) {
   return 0;
 }
-
+/**
 int main(int argc, char **argv) {
   if (argc == 1) {
     std::cerr
@@ -57,3 +57,4 @@ int main(int argc, char **argv) {
     LLVMFuzzerTestOneInput(v.data(), v.size());
   }
 }
+**/
\ No newline at end of file

diff --git a/headless/BUILD.gn b/headless/BUILD.gn
index 2a44aec23d..4ea02324d5 100644
--- a/headless/BUILD.gn
+++ b/headless/BUILD.gn
@@ -18,6 +18,9 @@ import("//tools/grit/grit_rule.gni")
 import("//tools/grit/repack.gni")
 import("//tools/v8_context_snapshot/v8_context_snapshot.gni")

+
+
+
 if (headless_use_policy) {
   assert(headless_use_prefs,
          "'headless_use_policy' requires 'headless_use_prefs'.")
@@ -298,6 +301,7 @@ source_set("headless_shared_sources") {
   visibility = [
     ":headless_non_renderer",
     ":headless_renderer",
+    ":jif", # JIF
   ]
   defines = []

@@ -1063,3 +1067,22 @@ executable("headless_example") {

   configs += [ ":headless_defines_config" ]
 }
+
+
+# JIF
+
+import("//testing/libfuzzer/fuzzer_test.gni")
+
+ fuzzer_test("jif") {
+  sources = [ "jif/jif.cc" ]
+  deps = [
+     ":headless_shell_lib",
+     "//headless:headless_shared_sources",
+     "//headless:headless_non_renderer",
+     "//content",
+     "//sandbox",
+     "//skia",  # we need this to override font render hinting in headless build
+     "//ui/gfx/geometry",
+  ]
+  libs = ["jif/libjif/target/release/libjif.a"]
+ }
