# Variables
[env]
FUZZER_NAME='qemu_launcher'
PROJECT_DIR = { script = ["pwd"] }

[tasks.do_nothing]
script_runner="@shell"
script='''
echo "Qemu fuzzer not supported on windows"
'''

# libpng
[tasks.libpng]
linux_alias = "unix_libpng"
mac_alias = "unix_libpng"
windows_alias = "do_nothing"

[tasks.unix_libpng]
script_runner="@shell"
script='''
wget https://deac-fra.dl.sourceforge.net/project/libpng/libpng16/1.6.37/libpng-1.6.37.tar.xz
tar -xvf libpng-1.6.37.tar.xz
'''

# fuzzer
[tasks.fuzzer]
linux_alias = "unix_fuzzer"
mac_alias = "unix_fuzzer"
windows_alias = "do_nothing"

[tasks.unix_fuzzer]
command = "cargo"
args = ["build", "--release"]

# Harness
[tasks.harness]
linux_alias = "unix_harness"
mac_alias = "unix_harness"
windows_alias = "do_nothing"

[tasks.unix_harness]
script_runner="@shell"
script='''
cd libpng-1.6.37 && ./configure --enable-shared=no --with-pic=yes --enable-hardware-optimizations=yes
cd ${PROJECT_DIR}
make -C libpng-1.6.37
# Build the libpng harness	
c++ \
	./harness.cc \
	./libpng-1.6.37/.libs/libpng16.a \
	-I./libpng-1.6.37/ \
	-o ${FUZZER_NAME} \
	-lm -lz
'''

# Run the fuzzer
[tasks.run]
linux_alias = "unix_run"
mac_alias = "unix_run"
windows_alias = "do_nothing"

[tasks.unix_run]
command = "cargo"
args = ["run", "--release", "./{FUZZER_NAME}"]
dependencies = [ "harness", "fuzzer" ]

# Run the fuzzer
[tasks.test]
linux_alias = "unix_test"
mac_alias = "unix_test"
windows_alias = "do_nothing"

# Short test
[tasks.unix_test]
script_runner = "@shell"
script='''
rm -rf libafl_unix_shmem_server || true
timeout 11s cargo run --release ./${FUZZER_NAME} &
'''
dependencies = [ "harness", "fuzzer" ]

# Clean up
[tasks.clean]
linux_alias = "unix_clean"
mac_alias = "unix_clean"
windows_alias = "do_nothing"

[tasks.unix_clean]
# Disable default `clean` definition
clear = true
script_runner="@shell"
script='''
rm -f ./${FUZZER_NAME}
make -C libpng-1.6.37 clean
cargo clean
'''