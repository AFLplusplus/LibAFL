Workdir: "/workspaces/LibAFL/fuzzers/libfuzzer_stb_image_concolic/fuzzer"
We're the client (internal port already bound by broker, Os {
    code: 98,
    kind: AddrInUse,
    message: "Address already in use",
})
Connected to port 1337
We're a client, let's fuzz :)
First run. Let's set it all up
We're a client, let's fuzz :)
Loading file "./corpus/not_kitty.png" ...
Loading file "./corpus/not_kitty_icc.png" ...
File "./corpus/not_kitty_icc.png" was not interesting, skipped.
Loading file "./corpus/not_kitty_alpha.png" ...
Loading file "./corpus/not_kitty_gamma.png" ...
File "./corpus/not_kitty_gamma.png" was not interesting, skipped.
We imported 2 inputs from disk.
1	GetInputByte { offset: 0 }
2	GetInputByte { offset: 1 }
3	GetInputByte { offset: 2 }
4	GetInputByte { offset: 3 }
5	GetInputByte { offset: 4 }
6	GetInputByte { offset: 5 }
7	GetInputByte { offset: 6 }
8	GetInputByte { offset: 7 }
9	GetInputByte { offset: 8 }
10	GetInputByte { offset: 9 }
11	GetInputByte { offset: 10 }
12	GetInputByte { offset: 11 }
13	GetInputByte { offset: 12 }
14	GetInputByte { offset: 13 }
15	GetInputByte { offset: 14 }
16	GetInputByte { offset: 15 }
17	GetInputByte { offset: 16 }
18	GetInputByte { offset: 17 }
19	GetInputByte { offset: 18 }
20	GetInputByte { offset: 19 }
21	GetInputByte { offset: 20 }
22	GetInputByte { offset: 21 }
23	GetInputByte { offset: 22 }
24	GetInputByte { offset: 23 }
25	GetInputByte { offset: 24 }
26	GetInputByte { offset: 25 }
27	GetInputByte { offset: 26 }
28	GetInputByte { offset: 27 }
29	GetInputByte { offset: 28 }
30	GetInputByte { offset: 29 }
31	GetInputByte { offset: 30 }
32	GetInputByte { offset: 31 }
33	GetInputByte { offset: 32 }
34	GetInputByte { offset: 33 }
35	GetInputByte { offset: 34 }
36	GetInputByte { offset: 35 }
37	GetInputByte { offset: 36 }
38	GetInputByte { offset: 37 }
39	GetInputByte { offset: 38 }
40	GetInputByte { offset: 39 }
41	GetInputByte { offset: 40 }
42	GetInputByte { offset: 41 }
43	GetInputByte { offset: 42 }
44	GetInputByte { offset: 43 }
45	GetInputByte { offset: 44 }
46	GetInputByte { offset: 45 }
47	GetInputByte { offset: 46 }
48	GetInputByte { offset: 47 }
49	GetInputByte { offset: 48 }
50	GetInputByte { offset: 49 }
51	GetInputByte { offset: 50 }
52	GetInputByte { offset: 51 }
53	GetInputByte { offset: 52 }
54	GetInputByte { offset: 53 }
55	GetInputByte { offset: 54 }
56	GetInputByte { offset: 55 }
57	GetInputByte { offset: 56 }
58	GetInputByte { offset: 57 }
59	GetInputByte { offset: 58 }
60	GetInputByte { offset: 59 }
61	GetInputByte { offset: 60 }
62	GetInputByte { offset: 61 }
63	GetInputByte { offset: 62 }
64	GetInputByte { offset: 63 }
65	GetInputByte { offset: 64 }
66	GetInputByte { offset: 65 }
67	GetInputByte { offset: 66 }
68	GetInputByte { offset: 67 }
69	GetInputByte { offset: 68 }
70	GetInputByte { offset: 69 }
71	GetInputByte { offset: 70 }
72	GetInputByte { offset: 71 }
73	GetInputByte { offset: 72 }
74	GetInputByte { offset: 73 }
75	GetInputByte { offset: 74 }
76	GetInputByte { offset: 75 }
77	GetInputByte { offset: 76 }
78	GetInputByte { offset: 77 }
79	GetInputByte { offset: 78 }
80	GetInputByte { offset: 79 }
81	GetInputByte { offset: 80 }
82	GetInputByte { offset: 81 }
83	GetInputByte { offset: 82 }
84	GetInputByte { offset: 83 }
85	GetInputByte { offset: 84 }
86	GetInputByte { offset: 85 }
87	GetInputByte { offset: 86 }
88	GetInputByte { offset: 87 }
89	GetInputByte { offset: 88 }
90	GetInputByte { offset: 89 }
91	GetInputByte { offset: 90 }
92	GetInputByte { offset: 91 }
93	GetInputByte { offset: 92 }
94	GetInputByte { offset: 93 }
95	GetInputByte { offset: 94 }
96	GetInputByte { offset: 95 }
97	GetInputByte { offset: 96 }
98	GetInputByte { offset: 97 }
99	GetInputByte { offset: 98 }
100	GetInputByte { offset: 99 }
101	GetInputByte { offset: 100 }
102	GetInputByte { offset: 101 }
103	GetInputByte { offset: 102 }
104	GetInputByte { offset: 103 }
105	GetInputByte { offset: 104 }
106	GetInputByte { offset: 105 }
107	GetInputByte { offset: 106 }
108	GetInputByte { offset: 107 }
109	GetInputByte { offset: 108 }
110	GetInputByte { offset: 109 }
111	GetInputByte { offset: 110 }
112	GetInputByte { offset: 111 }
113	GetInputByte { offset: 112 }
114	GetInputByte { offset: 113 }
115	GetInputByte { offset: 114 }
116	GetInputByte { offset: 115 }
117	GetInputByte { offset: 116 }
118	GetInputByte { offset: 117 }
119	GetInputByte { offset: 118 }
120	GetInputByte { offset: 119 }
121	GetInputByte { offset: 120 }
122	GetInputByte { offset: 121 }
123	GetInputByte { offset: 122 }
124	GetInputByte { offset: 123 }
125	GetInputByte { offset: 124 }
126	GetInputByte { offset: 125 }
127	GetInputByte { offset: 126 }
128	GetInputByte { offset: 127 }
129	BuildInteger { value: 255, bits: 8 }
130	BuildEqual { a: 1, b: 129 }
131	PushPathConstraint { constraint: 130, taken: false, site_id: 15210544 }
131	BuildInteger { value: 137, bits: 8 }
132	BuildEqual { a: 1, b: 131 }
133	PushPathConstraint { constraint: 132, taken: true, site_id: 24488304 }
133	BuildInteger { value: 80, bits: 8 }
134	BuildEqual { a: 2, b: 133 }
135	PushPathConstraint { constraint: 134, taken: true, site_id: 24488304 }
135	BuildInteger { value: 78, bits: 8 }
136	BuildEqual { a: 3, b: 135 }
137	PushPathConstraint { constraint: 136, taken: true, site_id: 24488304 }
137	BuildInteger { value: 71, bits: 8 }
138	BuildEqual { a: 4, b: 137 }
139	PushPathConstraint { constraint: 138, taken: true, site_id: 24488304 }
139	BuildInteger { value: 13, bits: 8 }
140	BuildEqual { a: 5, b: 139 }
141	PushPathConstraint { constraint: 140, taken: true, site_id: 24488304 }
141	BuildInteger { value: 10, bits: 8 }
142	BuildEqual { a: 6, b: 141 }
143	PushPathConstraint { constraint: 142, taken: true, site_id: 24488304 }
143	BuildInteger { value: 26, bits: 8 }
144	BuildEqual { a: 7, b: 143 }
145	PushPathConstraint { constraint: 144, taken: true, site_id: 24488304 }
145	BuildInteger { value: 10, bits: 8 }
146	BuildEqual { a: 8, b: 145 }
147	PushPathConstraint { constraint: 146, taken: true, site_id: 24488304 }
147	BuildInteger { value: 137, bits: 8 }
148	BuildEqual { a: 1, b: 147 }
149	PushPathConstraint { constraint: 148, taken: true, site_id: 18324112 }
149	BuildInteger { value: 80, bits: 8 }
150	BuildEqual { a: 2, b: 149 }
151	PushPathConstraint { constraint: 150, taken: true, site_id: 18324112 }
151	BuildInteger { value: 78, bits: 8 }
152	BuildEqual { a: 3, b: 151 }
153	PushPathConstraint { constraint: 152, taken: true, site_id: 18324112 }
153	BuildInteger { value: 71, bits: 8 }
154	BuildEqual { a: 4, b: 153 }
155	PushPathConstraint { constraint: 154, taken: true, site_id: 18324112 }
155	BuildInteger { value: 13, bits: 8 }
156	BuildEqual { a: 5, b: 155 }
157	PushPathConstraint { constraint: 156, taken: true, site_id: 18324112 }
157	BuildInteger { value: 10, bits: 8 }
158	BuildEqual { a: 6, b: 157 }
159	PushPathConstraint { constraint: 158, taken: true, site_id: 18324112 }
159	BuildInteger { value: 26, bits: 8 }
160	BuildEqual { a: 7, b: 159 }
161	PushPathConstraint { constraint: 160, taken: true, site_id: 18324112 }
161	BuildInteger { value: 10, bits: 8 }
162	BuildEqual { a: 8, b: 161 }
163	PushPathConstraint { constraint: 162, taken: true, site_id: 18324112 }
163	BuildZext { op: 15, bits: 56 }
164	BuildInteger { value: 8, bits: 64 }
165	BuildShiftLeft { a: 163, b: 164 }
166	BuildZext { op: 14, bits: 56 }
167	BuildInteger { value: 16, bits: 64 }
168	BuildShiftLeft { a: 166, b: 167 }
169	BuildZext { op: 13, bits: 56 }
170	BuildInteger { value: 24, bits: 64 }
171	BuildShiftLeft { a: 169, b: 170 }
172	BuildZext { op: 10, bits: 56 }
173	BuildInteger { value: 16, bits: 64 }
174	BuildShiftLeft { a: 172, b: 173 }
175	BuildZext { op: 9, bits: 56 }
176	BuildInteger { value: 24, bits: 64 }
177	BuildShiftLeft { a: 175, b: 176 }
178	BuildZext { op: 11, bits: 56 }
179	BuildInteger { value: 8, bits: 64 }
180	BuildShiftLeft { a: 178, b: 179 }
181	BuildZext { op: 12, bits: 56 }
182	BuildZext { op: 16, bits: 56 }
183	BuildOr { a: 168, b: 171 }
184	BuildOr { a: 183, b: 165 }
185	BuildOr { a: 184, b: 182 }
186	BuildOr { a: 174, b: 177 }
187	BuildOr { a: 186, b: 180 }
188	BuildOr { a: 187, b: 181 }
189	BuildZext { op: 188, bits: 32 }
190	BuildZext { op: 185, bits: 32 }
191	BuildInteger { value: 1130840649, bits: 32 }
192	BuildEqual { a: 190, b: 191 }
