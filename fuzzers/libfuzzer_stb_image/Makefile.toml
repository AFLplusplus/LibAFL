# Variables
[env]
FUZZER_NAME='libfuzzer_stb_image'
LIBAFL_CC = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = './target/release/libafl_cc', mapping = {"windows" = '.\\target\\release\\libafl_cc.exe'} }
LIBAFL_CXX = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = './target/release/libafl_cxx', mapping = {"windows" = '.\\target\\release\\libafl_cxx.exe'} }
FUZZER = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = './target/release/${FUZZER_NAME}', mapping = {"windows" = '.\\target\\release\\${FUZZER_NAME}.exe'} }

# Compilers
[tasks.cxx]
condition = { files_exist = ["${LIBAFL_CXX}"] }
command = "cargo"
args = ["build" , "--release"]

[tasks.cc]
condition = { files_exist = ["${LIBAFL_CC}"] }
command = "cargo"
args = ["build" , "--release"]


# Build the fuzzer
[tasks.fuzzer]
script_runner="@shell"
script='''
cargo build --release
cp ${FUZZER} .
'''
dependencies = ["cc", "cxx"]

[tasks.run]
linux_alias = "unix_run"
mac_alias = "unix_run"
windows_alias = "windows_run"

[tasks.unix_run]
script_runner = "@shell"
script='''
./${FUZZER_NAME} &
sleep 0.2
./${FUZZER_NAME}
'''
dependencies = [ "fuzzer" ]

[tasks.windows_run]
# Do nothing
script_runner = "@shell"
script='''
echo "Not integrated into cargo-make yet."
'''
dependencies = [ "fuzzer" ]


[tasks.test]
linux_alias = "unix_test"
mac_alias = "unix_test"
windows_alias = "windows_test"

[tasks.unix_test]
script_runner = "@shell"
script='''
timeout 11s ./${FUZZER_NAME} &
sleep 0.2
timeout 10s ./${FUZZER_NAME} >/dev/null 2>/dev/null &
'''
dependencies = [ "fuzzer" ]

[tasks.windows_test]
# Do nothing
script_runner = "@shell"
script='''
echo "Not integrated into cargo-make yet."
'''
dependencies = [ "fuzzer" ]


# Clean up
[tasks.clean]
# Disable default `clean` definition
clear = true
script_runner="@shell"
script='''
rm -f ./${FUZZER_NAME}
cargo clean
'''