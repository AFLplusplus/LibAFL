# Variables
[env]
FUZZER_NAME = 'harness'
PROJECT_DIR = { script = ["pwd"] }
PROFILE = { value = "release", condition = { env_not_set = ["PROFILE"] } }
PROFILE_DIR = { source = "${PROFILE}", default_value = "release", mapping = { "release" = "release", "dev" = "debug" }, condition = { env_not_set = [
  "PROFILE_DIR",
] } }
TARGET_DIR = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}"

[tasks.unsupported]
script_runner = "@shell"
script = '''
echo "Qemu fuzzer not supported on windows"
'''

# fuzzer
[tasks.fuzzer]
linux_alias = "fuzzer_unix"
mac_alias = "fuzzer_unix"
windows_alias = "unsupported"

[tasks.fuzzer_unix]
command = "cargo"
args = ["build", "--profile", "${PROFILE}"]

# Harness
[tasks.harness]
linux_alias = "harness_unix"
mac_alias = "harness_unix"
windows_alias = "unsupported"

[tasks.harness_unix]
script_runner = "@shell"
script = '''
cc -c "${PROJECT_DIR}/libfuzzer_main.c"
cc \
	-O0 \
    ./tests/test1.c \
    ./libfuzzer_main.o \
    -o test1 \
    -lm -lz

cc \
	-O0 \
    ./tests/test2.c \
    ./libfuzzer_main.o \
    -o test2 \
    -lm -lz

cc \
	-O0 \
    ./tests/test3.c \
    ./libfuzzer_main.o \
    -o test3 \
    -lm -lz
'''

# Run the fuzzer
[tasks.run]
linux_alias = "run_unix"
mac_alias = "run_unix"
windows_alias = "unsupported"

[tasks.run_unix]
script_runner = "@shell"
script = '''
cargo build \
  --profile \
  ${PROFILE}

${TARGET_DIR}/${PROFILE_DIR}/fuzzbench_qemu \
  --libafl-in \
  ../../inprocess/libfuzzer_libpng/corpus \
  --libafl-out \
  ./out \
  ./${FUZZER_NAME} \
  -- \
  ./${FUZZER_NAME}
'''
dependencies = ["harness"]

[tasks.test2]
command = "cargo"
args = [
  "run",
  "--profile",
  "${PROFILE}",
  "./test2",
  "--",
  "--libafl-in",
  "../../inprocess/libfuzzer_libpng/corpus",
  "--libafl-out",
  "./out",
  "./test2",
]

[tasks.test3]
command = "cargo"
args = [
  "run",
  "--profile",
  "${PROFILE}",
  "./test3",
  "--",
  "--libafl-in",
  "../../inprocess/libfuzzer_libpng/corpus",
  "--libafl-out",
  "./out",
  "./test3",
]
dependencies = ["harness"]


# Clean up
[tasks.clean]
linux_alias = "clean_unix"
mac_alias = "clean_unix"
windows_alias = "unsupported"

[tasks.clean_unix]
# Disable default `clean` definition
clear = true
script_runner = "@shell"
script = '''
rm -f ./${FUZZER_NAME}
cargo clean
'''
